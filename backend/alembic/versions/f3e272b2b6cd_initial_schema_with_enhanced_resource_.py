"""Initial schema with enhanced resource model

Revision ID: f3e272b2b6cd
Revises: 
Create Date: 2025-09-09 23:29:30.706190

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.types import TypeDecorator, CHAR
import uuid


# revision identifiers, used by Alembic.
revision: str = 'f3e272b2b6cd'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


class GUID(TypeDecorator):
    """Platform-independent GUID type."""
    impl = CHAR
    cache_ok = True

    def load_dialect_impl(self, dialect):
        if dialect.name == 'postgresql':
            from sqlalchemy.dialects.postgresql import UUID
            return dialect.type_descriptor(UUID())
        else:
            return dialect.type_descriptor(CHAR(36))

    def process_bind_param(self, value, dialect):
        if value is None:
            return value
        elif dialect.name == 'postgresql':
            return str(value)
        else:
            if not isinstance(value, uuid.UUID):
                return str(uuid.UUID(value))
            else:
                return str(value)

    def process_result_value(self, value, dialect):
        if value is None:
            return value
        else:
            if not isinstance(value, uuid.UUID):
                return uuid.UUID(value)
            return value


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('resources',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('publisher', sa.String(), nullable=True),
    sa.Column('contributor', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_modified', sa.DateTime(timezone=True), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('format', sa.String(), nullable=True),
    sa.Column('identifier', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('language', sa.String(length=16), nullable=True),
    sa.Column('coverage', sa.String(), nullable=True),
    sa.Column('rights', sa.String(), nullable=True),
    sa.Column('subject', sa.JSON(), server_default='[]', nullable=False),
    sa.Column('relation', sa.JSON(), server_default='[]', nullable=False),
    sa.Column('classification_code', sa.String(), nullable=True),
    sa.Column('read_status', sa.Enum('unread', 'in_progress', 'completed', 'archived', name='read_status'), nullable=False),
    sa.Column('quality_score', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('resources')
    # ### end Alembic commands ###
